@model BabySingers.Models.NoteViewmodel
@using System.Linq


@{
    ViewData["Title"] = "ShowEm";
}

<style>
    .btn-group button {
        background-color: #4CAF50; /* Green background */
        border: 1px solid green; /* Green border */
        color: white; /* White text */
        padding: 10px 24px; /* Some padding */
        cursor: pointer; /* Pointer/hand icon */
        float: left; /* Float the buttons side by side */
    }

    /* Clear floats (clearfix hack) */
    .btn-group:after {
        content: "";
        clear: both;
        display: table;
    }

    .btn-group button:not(:last-child) {
        border-right: none; /* Prevent double borders */
    }

    /* Add a background color on hover */
    .btn-group button:hover {
        background-color: #3e8e41;
    }
</style>

<h1>ShowEm</h1>
<body>
    <div>
        @foreach (var a in Model.answers)
        {
            <input type="submit" value="@a" id="answer" />

        }

        @foreach (var q in Model.questionpic)
        {

        }
        <!--TODO: Make Image array-->
        <!--TODO: Next question on button click-->
        <!--TODO: Validate selected button against dict[i].question-->
        <!--TODO: Add correct answers / questions total counter-->
        <!--TODO: Show Random Image from array with getElement in dict-->
        
        <!--var random123 = Math.floor(Math.random() * Qs.Count);-->
        <script>
            var images = [
                <img src="~/css/Images/BSinger C.PNG" />];
            //Dictionary to check answers
            var dict = [
                {
                    question: "C",
                    pic: images[0]
                }
            ];

            var quest;
            var answ;
            for (var i = 0; i < dict.length; i++) {
                quest = promt(dict[i].pic);
                answ = document.getElementById('answer')
            }
        </script>
    </div>
</body>


